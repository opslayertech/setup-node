name: "Setup Node.js Environment with Bun"
description: "Checkout, setup Node.js and restore Bun cache"
runs:
  using: "composite"
  steps:
    - name: ðŸ¤˜ Checkout
      uses: actions/checkout@v4

    - name: âš™ Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"

    - name: Getting Bun ðŸ¥¯ version
      id: bun_version
      shell: bash
      run: |
        PACKAGE_MANAGER="$(node -p "require('./package.json').packageManager" 2>/dev/null || '')"

        if [[ "$PACKAGE_MANAGER" =~ ^bun@ ]]; then
          BUN_VERSION="$(echo "$PACKAGE_MANAGER" | cut -d '@' -f2)"
          echo "Detected bun version from package.json: bun@$BUN_VERSION"
          echo "bun_version='$BUN_VERSION'" >> $GITHUB_OUTPUT
        else
          echo "No valid bun version specified in packageManager, using latest..."
          echo "bun_version='latest'" >> $GITHUB_OUTPUT
        fi

    - uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ steps.bun_version.outputs.bun_version }}

    - name: ðŸ”„ Restore bun cache
      id: node_modules-cache
      uses: actions/cache/restore@v4
      with:
        key: bun-${{ runner.os }}-${{ hashFiles('package.json') }}-${{ hashFiles('bun.lock') }}
        restore-keys: |
          bun-${{ runner.os }}-${{ hashFiles('package.json') }}-
          bun-${{ runner.os }}-
        path: ~/.bun/install/cache

    - name: â¬‡ install
      shell: "bash"
      run: bun install --frozen-lockfile --ignore-scripts

    - name: ðŸ”„ Save bun cache
      continue-on-error: true
      uses: actions/cache/save@v4
      with:
        key: bun-${{ runner.os }}-${{ hashFiles('package.json') }}-${{ hashFiles('bun.lock') }}
        path: ~/.bun/install/cache
