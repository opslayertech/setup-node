name: "Setup Node.js Environment"
description: "Checkout, setup Node.js, and restore cache, install pnpm, install dependencies, and save cache."
runs:
  using: "composite"
  steps:
    - name: ü§ò Checkout
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Setup Node.js environment
      id: setup-node
      uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"

    - name: üì¶ Install pnpm
      shell: bash
      run: |
        # Safely extract the packageManager field (if it exists).
        PACKAGE_MANAGER="$(node -p "require('./package.json').packageManager" 2>/dev/null || '')"

        if [[ "$PACKAGE_MANAGER" =~ ^pnpm@ ]]; then
          # Extract the pnpm version from something like "pnpm@11.0.0"
          PNPM_VERSION="$(echo "$PACKAGE_MANAGER" | cut -d '@' -f2)"
          echo "Detected pnpm version from package.json: pnpm@$PNPM_VERSION"
          npm install -g "pnpm@$PNPM_VERSION"
        else
          echo "No valid pnpm packageManager specified, installing latest pnpm..."
          npm install -g pnpm@latest
        fi    

    - name: üîÑ Retrieve current pnpm version
      id: get-pnpm-version
      shell: bash
      run: echo "pnpm_version=$(pnpm --version)" >> $GITHUB_ENV

    - name: üîÑ Restore node_modules cache
      id: node_modules-cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: node_modules-${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-pnpm-${{ env.pnpm_version }}-${{ hashFiles('package-lock.json') }}

    - name: Display node/pnpm versions
      shell: bash
      run: node --version && pnpm --version  

    - name: ‚¨áÔ∏è install
      shell: "bash"
      run: | 
        pnpm install --ignore-scripts --frozen-lockfile

    - name: üîÑ Save node_modules cache
      if: steps.node_modules-cache.outputs.cache-hit != 'true'
      continue-on-error: true
      uses: actions/cache/save@v4
      with:
        key: node_modules-${{ runner.os }}-node-${{ steps.setup-node.outputs.node-version }}-pnpm-${{ env.pnpm_version }}-${{ hashFiles('package-lock.json') }}
        path: node_modules
