name: "Setup Node.js Environment"
description: "Checkout, setup Node.js and restore cache"
runs:
  using: "composite"
  steps:
    - name: ü§ò checkout
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"

    - name: üîÑ Restore node_modules cache
      id: node_modules-cache
      uses: actions/cache/restore@v4
      with:
        key: node_modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        path: node_modules

    - name: Install npm
      shell: bash
      run: |
        # Safely extract the packageManager field (if it exists).
        PACKAGE_MANAGER="$(node -p "require('./package.json').packageManager" 2>/dev/null || '')"

        if [[ "$PACKAGE_MANAGER" =~ ^npm@ ]]; then
          # Extract the npm version from something like "npm@11.0.0"
          NPM_VERSION="$(echo "$PACKAGE_MANAGER" | cut -d '@' -f2)"
          echo "Detected npm version from package.json: npm@$NPM_VERSION"
          npm install -g "npm@$NPM_VERSION"
        else
          echo "No valid npm packageManager specified, installing latest npm..."
          npm install -g npm@latest
        fi    

    - name: ‚¨áÔ∏è install
      shell: "bash"
      if: steps.node_modules-cache.outputs.cache-hit != 'true'
      run: | 
        npm ci --ignore-scripts --include=dev

    - name: üîÑ Save node_modules cache
      if: steps.node_modules-cache.outputs.cache-hit != 'true'
      continue-on-error: true
      uses: actions/cache/save@v4
      with:
        key: node_modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        path: node_modules
